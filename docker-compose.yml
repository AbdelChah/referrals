version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000"  
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - referral_network
    depends_on:
      - mongodb  

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db              # MongoDB data persistence
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  # Initialization script
      - ./mongo-keyfile:/etc/mongo-keyfile:ro  # KeyFile for secure replica set communication
    networks:
      - referral_network
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all", "--auth", "--keyFile", "/etc/mongo-keyfile"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin    # Root user credentials
      MONGO_INITDB_ROOT_PASSWORD: password

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot  # For serving the ACME challenge
      - ./certbot/conf:/etc/letsencrypt  # For SSL certificates
    ports:
      - "80:80"  # HTTP
      - "443:443"  # HTTPS
    networks:
      - referral_network
    depends_on:
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot  # ACME challenge
      - ./certbot/conf:/etc/letsencrypt  # SSL certificates
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 2073600; done'"

  
  
networks:
  referral_network:

volumes:
  mongodb_data:
